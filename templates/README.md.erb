# <%= app_name.gsub("-", "_").titleize %>

[YOU SHOULD FILL ME IN: What does this app do?]

## Quick links

* **Staging:** [FILL ME IN]
* **Production:** [FILL ME IN]
* **Trello:** [FILL ME IN]
* **GitHub:** [FILL ME IN]
* ...

## Architecture

* **Backend:** Ruby on Rails 5, PostgreSQL, Redis (for background jobs)
* **Frontend:** ES5, using custom object-oriented JavaScript inspired by
  Backbone, React, and Angular

## Getting started

In order to develop on and run the app, you will need to have Ruby <%= ruby_version %>,
Postgres, and Redis installed on your computer first.

### Installing Ruby

To install Ruby you'll need a version manager. We recommend using [rbenv].
You can easily install it by running:

    brew install rbenv ruby-build

[rbenv]: https://github.com/rbenv/rbenv

After you do this, you can install Ruby <%= ruby_version %> by saying:

    brew install openssl
    rbenv install <%= ruby_version %>

If this gives you an error, then your installation of `ruby-build` may not be
up to date. A command will be given at the end; run this and then you can run
the `rbenv install` command again.

### Installing Postgres and Redis

To install Postgres and Redis, say:

    brew install postgresql redis
    brew services postgresql start
    brew services redis start

### Installing the rest of the dependencies

Then, clone this repo, navigate to where you cloned the repo, and run the
following script to install backend and frontend dependencies and set up the
database:

    bin/setup

Note that if you have macOS Sierra, this may give you a compilation error. This
is a known error, and you can use the following fix to get around this:

    brew install libxml2 libxslt
    brew link libxml2
    brew link libxslt
    bundle config build.nokogiri --use-system-libraries --with-xml2-config=/usr/local/opt/libxml2 --with-xslt-config=/usr/local/opt/xslt

Now try running `bin/setup` again.

## Running the app

To run the app, use [Heroku Local]:

    heroku local

You'll know when the app is started if you see a line that looks something like:

    2:42:18 PM web.1    |  [2328] * Listening on tcp://0.0.0.0:3000

Now you can visit the app by going to:

    http://localhost:3000

[Heroku Local]: https://devcenter.heroku.com/articles/heroku-local

## Development workflow

* The mainline branch is `master`.
* Create a card for a feature or bugfix on Trello.
* Cut feature or bugfix branches off of `master`.
* Write tests if you are updating backend code.
* Create pull requests on GitHub and get others to review your work.
* Rebase and squash your commits if needed to prevent cluttering up the history
  with needless commits.
* Merge those branches into `master` using `--ff-only` to prevent merge commits
  from being created.
* Deploy changes to staging so that the client can try out those changes in a
  live environment.
* Move cards on Trello to the appropriate columns as you are working.

## Testing

[RSpec] is used to write tests for Ruby code.

You can run the test suite for the project by saying:

    bundle exec rake

[RSpec]: http://rspec.info

## Style

Ruby and JavaScript code follows a consistent style, enforced by [Rubocop] and
[ESLint]. Configure your editor to run code you write against these tools.
Configuration is kept in [`.rubocop.yml`](.rubocop.yml) and
[`.eslintrc.yml`](.eslintrc.yml).

[Rubocop]: https://github.com/bbatsov/rubocop
[ESLint]: http://eslint.org/
